/*Write a program to implement priority scheduling algorithm with context switching time. 
Prompt to user to enter the number of processes and then enter their priority, burst time and arrival time also. 
Now whenever operating system preempts a process and shifts cpuâ€™s control to some another process of higher priority assume that it takes 2 seconds for context switching(dispatcher latency).
Form a scenario, where we can give the processes are assigned with priority where the lower integer number is higher priority and then context switch .. as the process waits the priority of the process increase at rate of one per 2 time units of wait. 
Calculate waiting time and turnaround time for each process.
*/

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

int main()
{
    int B_T[10],Process_no[10],W_T[10],T_A_T[10],remBT[10],ct[10],l,k,m,tok;
    int A_T[10],Prior[10],i,j,Number_of_Process,tot=0,flag,temp,count=0;
	float Avg_W_T,Avg_T_A_T;
	int cswitch = 0;	
    printf("Enter Number of Process:");
    scanf("%2d",&Number_of_Process);
    for( i = 0 ; i < Number_of_Process ; i++ )
    {
        printf("\n\n P[%d] :",(i+1));
        printf("\n Enter Burst Time: ");
        scanf("%2d",&B_T[i]);
		remBT[i] = B_T[i];
        printf("\n Enter Arrival Time: ");
        scanf("%2d",&A_T[i]);
        printf("\n Enter Priority: ");
        scanf("%2d",&Prior[i]);
        Process_no[i]=i+1;
	ct[i]=0;
    }
